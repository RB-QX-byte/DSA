version: '3.8'

services:
  # API Server
  api-server:
    build:
      context: ../../
      dockerfile: deployments/docker/api-server/Dockerfile
    container_name: api-server
    hostname: api-server
    
    # Environment variables
    environment:
      - DATABASE_URL=postgres://judge:password@postgres:5432/competitive_programming?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - PORT=8080
      - LOG_LEVEL=info
      - OTEL_SERVICE_NAME=api-server
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_ENVIRONMENT=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    
    # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Restart policy
    restart: unless-stopped
    
    # Network
    networks:
      - judge-network
    
    # Ports
    ports:
      - "8080:8080"
    
    # Dependencies
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    # Security
    security_opt:
      - no-new-privileges:true

  # Judge Worker with Dual-Layer Sandbox
  judge-worker:
    build:
      context: ../../
      dockerfile: deployments/docker/judge-worker/Dockerfile
    container_name: judge-worker-dual-layer
    hostname: judge-worker
    
    # Security configuration
    security_opt:
      - no-new-privileges:true
      - seccomp:deployments/docker/judge-worker/seccomp-profile.json
      - apparmor:docker-default
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Capabilities
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - SYS_CHROOT
      - SYS_ADMIN  # Required for cgroups
    
    # Privileged mode for isolate and cgroups (can be restricted further in production)
    privileged: false
    
    # Volumes
    volumes:
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 100M
          mode: 1777
      - type: tmpfs
        target: /var/tmp
        tmpfs:
          size: 100M
          mode: 1777
      - judge-work:/tmp/judge-work
      - isolate-boxes:/var/local/lib/isolate
    
    # Environment variables
    environment:
      - DATABASE_URL=postgres://judge:password@postgres:5432/competitive_programming?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - JUDGE_VERSION=1.0.0
      - HEALTH_PORT=8081
      - LOG_LEVEL=info
      - ISOLATE_CONFIG=/usr/local/etc/isolate.conf
      - SECCOMP_PROFILE=/opt/judge/seccomp-profile.json
      - JUDGE_WORK_DIR=/tmp/judge-work
      - OTEL_SERVICE_NAME=judge-worker
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_ENVIRONMENT=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    
    # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Restart policy
    restart: unless-stopped
    
    # Network
    networks:
      - judge-network
    
    # Ports (for health checks and monitoring)
    ports:
      - "8081:8081"
      - "8082:8082"
    
    # Dependencies
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: judge-postgres
    environment:
      - POSTGRES_DB=competitive_programming
      - POSTGRES_USER=judge
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ../../schema_recommendation_tables.sql:/docker-entrypoint-initdb.d/02-recommendations.sql:ro
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U judge -d competitive_programming"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    networks:
      - judge-network
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: judge-redis
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    
    volumes:
      - redis-data:/data
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    networks:
      - judge-network
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: judge-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    
    ports:
      - "9090:9090"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # Log aggregation with Loki
  loki:
    image: grafana/loki:latest
    container_name: judge-loki
    command: -config.file=/etc/loki/local-config.yaml
    
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    
    ports:
      - "3100:3100"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: judge-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./monitoring/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
    
    ports:
      - "3000:3000"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true
    
    depends_on:
      - prometheus
      - loki

  # Alertmanager for alert routing
  alertmanager:
    image: prom/alertmanager:latest
    container_name: judge-alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    
    ports:
      - "9093:9093"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # OpenTelemetry Collector for tracing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: judge-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    
    volumes:
      - ./monitoring/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # OTel Collector metrics
      - "8889:8889"   # Prometheus metrics for collector
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true
    
    depends_on:
      - grafana

  # Jaeger for distributed tracing storage and UI
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: judge-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: judge-node-exporter
    command:
      - '--path.rootfs=/host'
    
    volumes:
      - '/:/host:ro,rslave'
    
    ports:
      - "9100:9100"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: judge-cadvisor
    privileged: true
    
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    
    ports:
      - "8080:8080"
    
    networks:
      - judge-network
    
    security_opt:
      - no-new-privileges:true

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: judge-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://judge:password@postgres:5432/competitive_programming?sslmode=disable
    
    ports:
      - "9187:9187"
    
    networks:
      - judge-network
    
    depends_on:
      - postgres
    
    security_opt:
      - no-new-privileges:true

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: judge-redis-exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
    
    ports:
      - "9121:9121"
    
    networks:
      - judge-network
    
    depends_on:
      - redis
    
    security_opt:
      - no-new-privileges:true

# Networks
networks:
  judge-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: judge-br
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local
  judge-work:
    driver: local
  isolate-boxes:
    driver: local