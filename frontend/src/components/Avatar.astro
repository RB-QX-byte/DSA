---
export interface Props {
  src?: string;
  alt?: string;
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';
  initials?: string;
  status?: 'online' | 'offline' | 'busy' | 'away';
  class?: string;
  [key: string]: any;
}

const {
  src,
  alt = '',
  size = 'md',
  initials = '',
  status,
  class: className = '',
  ...props
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center rounded-full overflow-hidden bg-gray-100 relative';

const sizeClasses = {
  xs: 'w-6 h-6 text-xs',
  sm: 'w-8 h-8 text-sm',
  md: 'w-10 h-10 text-base',
  lg: 'w-12 h-12 text-lg',
  xl: 'w-14 h-14 text-xl',
  '2xl': 'w-16 h-16 text-2xl'
};

const statusClasses = {
  online: 'bg-green-400',
  offline: 'bg-gray-400',
  busy: 'bg-red-400',
  away: 'bg-yellow-400'
};

const statusSizeClasses = {
  xs: 'w-1.5 h-1.5',
  sm: 'w-2 h-2',
  md: 'w-2.5 h-2.5',
  lg: 'w-3 h-3',
  xl: 'w-3.5 h-3.5',
  '2xl': 'w-4 h-4'
};

const classes = `${baseClasses} ${sizeClasses[size]} ${className}`;
---

<div class={classes} {...props}>
  {src ? (
    <img 
      src={src} 
      alt={alt} 
      class="w-full h-full object-cover" 
      loading="lazy"
    />
  ) : (
    <span class="font-medium text-gray-600 select-none">
      {initials || alt.charAt(0).toUpperCase()}
    </span>
  )}
  
  {status && (
    <span 
      class={`absolute bottom-0 right-0 block rounded-full ring-2 ring-white ${statusClasses[status]} ${statusSizeClasses[size]}`}
      aria-label={`User is ${status}`}
    ></span>
  )}
</div>

<style>
  /* Custom avatar styles */
  .avatar-gradient {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  }
  
  /* Dark theme adjustments */
  [data-theme="dark"] .avatar-fallback {
    background-color: rgba(75, 85, 99, 0.5);
    color: rgb(209, 213, 219);
  }
  
  [data-theme="dark"] .avatar-status {
    ring-color: rgb(17, 24, 39);
  }
</style>